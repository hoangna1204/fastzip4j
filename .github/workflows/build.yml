name: Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [linux, windows, macos]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.1'

      - name: Install Cross-Compilation Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 gcc-mingw-w64
          sudo apt-get install -y gcc-multilib g++-multilib
          sudo apt-get install -y musl-tools

      - name: Install Go Packages
        run: go mod tidy
        working-directory: ./fastzip4jlib

      - name: Build Go Lib
        run: |
          if [[ "${{ matrix.target }}" == "linux" ]]; then
            GOOS=linux GOARCH=amd64 CGO_ENABLED=1 go build -buildmode=c-shared -o ../fastzip4j/src/main/resources/lib/libfastzip4j.so fastzip4j.go
          elif [[ "${{ matrix.target }}" == "windows" ]]; then
            GOOS=windows GOARCH=amd64 CC=x86_64-w64-mingw32-gcc CGO_ENABLED=1 go build -buildmode=c-shared -o ../fastzip4j/src/main/resources/lib/libfastzip4j.dll fastzip4j.go
          elif [[ "${{ matrix.target }}" == "macos" ]]; then
            docker run --rm -v $(pwd):/work -w /work/fastzip4jlib \
              crazymax/osxcross:latest \
              /bin/bash -c "CC=o64-clang GOOS=darwin GOARCH=amd64 CGO_ENABLED=1 go build -buildmode=c-shared -o ../fastzip4j/src/main/resources/lib/libfastzip4j.dylib fastzip4j.go"
          fi
        working-directory: ./fastzip4jlib
      
      - name: Verify Go Libraries
        run: |
          echo "Checking Go libraries in resources directory:"
          ls -la ./src/main/resources/lib/
        working-directory: ./fastzip4j

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Maven
        run: sudo apt-get install -y maven
        working-directory: ./fastzip4j

      - name: Build artifact
        run: mvn clean install -Dgpg.skip=true -Drevision=SNAPSHOT
        working-directory: ./fastzip4j
        
      - name: Verify JAR Contents
        run: |
          echo "Checking contents of the built JAR:"
          jar tf target/fastzip4j-SNAPSHOT.jar | grep libfastzip4j
        working-directory: ./fastzip4j

      - name: Check Go compile library
        working-directory: ./fastzip4j
        run: |
          ls ./src/main/resources/lib
