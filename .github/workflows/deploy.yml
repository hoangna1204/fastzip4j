name: Deploy to GitHub Packages

on:
  push:
    tags:
      - '*'
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Linux Go Library
        uses: actions/download-artifact@v4
        with:
          name: linux-go-lib
          path: downloaded-libs/

      - name: Download Windows Go Library
        uses: actions/download-artifact@v4
        with:
          name: windows-go-lib
          path: downloaded-libs/

      - name: Download macOS Go Library
        uses: actions/download-artifact@v4
        with:
          name: macos-go-lib
          path: downloaded-libs/

      - name: Create Resources Directory
        run: mkdir -p ./src/main/resources/lib
        working-directory: ./fastzip4j
  
      - name: Copy Libraries to Resources Folder
        run: |
          cp downloaded-libs/libfastzip4j.so ./src/main/resources/lib/
          cp downloaded-libs/libfastzip4j.dll ./src/main/resources/lib/
          cp downloaded-libs/libfastzip4j.dylib ./src/main/resources/lib/
        shell: bash
        working-directory: ./fastzip4j
  
      - name: Verify Copied Libraries
        run: ls -la fastzip4j/src/main/resources/lib/
        working-directory: ./fastzip4j

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          server-id: ossrh
          server-username: ${{ secrets.MAVEN_CENTRAL_REPO_USERNAME }}
          server-password: ${{ secrets.MAVEN_CENTRAL_REPO_PASSWORD }}
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Setup Maven
        run: sudo apt-get install -y maven

      - name: Extract Version from Tag
        id: extract_version
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            VERSION=${{ github.event.release.tag_name }}
          else
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          VERSION=${VERSION#v}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Extracted version: ${VERSION}"

      - name: Build artifact
        run: mvn clean install -Dproject.version=${{ env.VERSION }}
        working-directory: ./fastzip4j
        env:
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          MAVEN_GPG_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Verify JAR Contents
        run: |
          echo "Checking contents of the built JAR:"
          jar tf target/fastzip4j-${VERSION}.jar | grep libfastzip4j
        working-directory: ./fastzip4j

      - name: Check Go compile library
        working-directory: ./fastzip4j
        run: |
          ls ./src/main/resources/lib

      - name: Configure Maven for GitHub Packages
        if: github.event_name == 'release'
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml << EOF
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                              https://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>github</id>
                <username>\${env.GITHUB_ACTOR}</username>
                <password>\${env.GITHUB_TOKEN}</password>
              </server>
              <server>
                <id>central</id>
                <username>\${env.MAVEN_USERNAME}</username>
                <password>\${env.MAVEN_PASSWORD}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Deploy to GitHub Packages
        if: github.event_name == 'release'
        run: mvn deploy -Dproject.version=${{ env.VERSION }} -Dgpg.skip=true
        working-directory: ./fastzip4j
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Maven Central
        if: github.event_name == 'release'
        run: mvn --batch-mode deploy -Dproject.version=${{ env.VERSION }}
        working-directory: ./fastzip4j
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_REPO_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_CENTRAL_REPO_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          MAVEN_GPG_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
